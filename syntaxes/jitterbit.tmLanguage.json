{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Jitterbit Script",
	"patterns": [
		{
			"include": "#meta"
		}
	],
	"repository": {
		"comments": {
			"name":"comment.jitterbit",
			"patterns": [
				{
					"name": "comment.line.double-slash.jitterbit",
					"match": "\\/\\/.*(?=\\n)"
				},
				{
					"name": "comment.block.jitterbit",
					"begin": "(.|\\s)(?=\\/\\*)",
					"end": "(?<=\\*\\/)(.|\\s)",
					"match": "\\/\\*(.|\\s|\\r\\n)*\\*\\/"
				}
			]
		},
		"constants": {
			"name": "constant.language.jitterbit",
			"patterns": [
				{
					"name": "constant.language.bool.jitterbit",
					"match": "(true|false)"
				},
				{
					"name": "constant.numeric.float.jitterbit",
					"match": "[0-9]+\\.[0-9]+"
				},
				{
					"name": "constant.numeric.int.jitterbit",
					"match": "[0-9]+"
				}
			]
		},
		"errors": {
			"name": "invalid.illegal.jitterbit",
			"patterns": [
				{
					"name": "invalid.illegal.frontOutOfScope.jitterbit",
					"patterns": [
						{
							"name": "invalid.illegal.frontOutOfScope.jitterbit",
							"patterns": [
								{
									"name": "invalid.illegal.frontOutOfScope.varDecl.jitterbit",
									"match": ".+(?=(.|\\s)*<trans>)"
								}
							]
						},
						{
							"name": "invalid.illegal.backOutOfScope.jitterbit",
							"match": "(?<=<\\/trans>)\\s*(.)+"
						}
					]
				}
			]
		},
		"functionCall": {
			"name": "support.function.call.jitterbit",
			"patterns": [
				{
					"name": "support.function.name.control.jitterbit",
					"match": "(?i:case|equal|if|while)(?=\\((.|\\s)*)"
				},
				{
					"name": "support.function.name.jitterbit",
					"match": "\\w+(?=\\((.|\\s)*)"
				},
				{
					"name": "variable.parameter.jitterbit",
					"patterns": [
						{
							"name": "variable.parameter.const.jitterbit",
							"include": "#constants"
						},
						{
							"name": "variable.parameter.var.jitterbit",
							"include": "#variables"
						},
						{
							"name": "support.function.call.jitterbit",
							"include": "#functionCall"
						}
					]
				}
			]
		},
		"operators": {
			"name": "keyword.operator.jitterbit",
			"patterns": [
				{
					"name": "keyword.operator.equal.jitterbit",
					"match": "\\=\\="
				},
				{
					"name": "keyword.operator.notEqual.jitterbit",
					"match": "\\!\\="
				},
				{
					"name": "keyword.operator.greaterEqual.jitterbit",
					"match": "\\>\\="
				},
				{
					"name": "keyword.operator.lessEqual.jitterbit",
					"match": "\\<\\="
				},
				{
					"name": "keyword.operator.greater.jitterbit",
					"match": "(?<!\\<\\/trans)\\>"
				},
				{
					"name": "keyword.operator.less.jitterbit",
					"match": "\\<(?!\\/trans\\>)"
				},
				{
					"name": "keyword.operator.and.jitterbit",
					"match": "\\&\\&"
				},
				{
					"name": "keyword.operator.or.jitterbit",
					"match": "\\|\\|"
				},
				{
					"name": "keyword.operator.incrementation.jitterbit",
					"match": "\\+\\+"
				},
				{
					"name": "keyword.operator.decrementation.jitterbit",
					"match": "\\-\\-"
				},
				{
					"name": "keyword.operator.addAssign.jitterbit",
					"match": "\\+\\="
				},
				{
					"name": "keyword.operator.subAssign.jitterbit",
					"match": "\\-\\="
				},
				{
					"name": "keyword.operator.mulAssign.jitterbit",
					"match": "\\*\\="
				},
				{
					"name": "keyword.operator.divAssign.jitterbit",
					"match": "\\/\\="
				},
				{
					"name": "keyword.operator.addition.jitterbit",
					"match": "\\+"
				},
				{
					"name": "keyword.operator.multiplication.jitterbit",
					"match": "\\*"
				},
				{
					"name": "keyword.operator.division.jitterbit",
					"match": "\\/(?!trans\\>)"
				},
				{
					"name": "keyword.operator.subtraction.jitterbit",
					"match": "\\-"
				},
				{
					"name": "keyword.operator.not.jitterbit",
					"match": "\\!"
				},
				{
					"name": "keyword.operator.assignment.jitterbit",
					"match": "\\="
				}
			]
		},
		"meta": {
			"name": "meta.scope.jitterbit",
			"patterns": [
				{
					"name": "jitterbit.script.scope",
					"patterns": [
						{ 
							"include": "#errors"
						},
						{
							"include": "#tags"
						},
						{
							"include": "#comments"
						},
						{
							"include": "#constants"
						},
						{
							"include": "#operators"
						},
						{
							"include": "#strings"
						},
						{
							"include": "#functionCall"
						},
						{
							"include": "#variables"
						}
					]
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.jitterbit",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.jitterbit",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.single.jitterbit",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape.jitterbit",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"tags":{
			"name": "meta.tag.jitterbit",
			"patterns": [
				{
					"name": "meta.tag.start.jitterbit",
					"patterns": [
						{
							"name": "punctuation.definition.tag.trans.start.begin.jitterbit",
							"match": "\\<(?=trans\\>)"
						},
						{
							"name": "entity.name.tag.jitterbit",
							"match": "(?<=\\<)trans(?=\\>)"
						},
						{
							"name": "punctuation.definition.tag.trans.start.end.jitterbit",
							"match": "(?<=\\<trans)\\>"
						}
					]
				},
				{
					"name": "meta.tag.end.jitterbit",
					"patterns": [
						{
							"name": "punctuation.definition.tag.trans.end.begin.jitterbit",
							"match": "\\<\\/(?=trans\\>)"
						},
						{
							"name": "entity.name.tag.jitterbit",
							"match": "(?<=\\<\\/)trans(?=\\>)"
						},
						{
							"name": "punctuation.definition.tag.trans.end.end.jitterbit",
							"match": "(?<=\\<\\/trans)\\>"
						}
					]
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "support.variable.jitterbit",
					"match": "\\$jitterbit(\\.\\w+)+"
				},
				{
					"name": "variable.name.global.jitterbit",
					"match": "\\$\\w+(\\.\\w+)*"
				},
				{
					"name": "variable.name.local.jitterbit",
					"match": "(?<!\\$])[a-zA-Z\\_]+[a-zA-Z0-9\\_]*"
				}
			]
		}
	},
	"scopeName": "source.jitterbit"
}
